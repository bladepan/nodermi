// Generated by CoffeeScript 1.8.0
(function() {
  var ObjectRegistry, debug, encodeHelper, logger, weak;

  weak = require('weak');

  debug = require('debug');

  encodeHelper = require('./common').encodeHelper;

  logger = debug('nodermi:objRegistry');

  ObjectRegistry = (function() {
    function ObjectRegistry() {
      this.objects = {};
      this.functions = {};
      this.sequence = 0;
      this.size = 0;
    }

    ObjectRegistry.prototype.registObject = function(obj) {
      var id;
      if (encodeHelper.getHiddenRid(obj) == null) {
        id = this.getSequence();
        encodeHelper.setHiddenRid(obj, id);
        if (typeof obj === 'function') {
          this.functions[id] = obj;
        } else {
          this.objects[id] = weak(obj, (function(_this) {
            return function() {
              delete _this.objects[id];
              return _this.size--;
            };
          })(this));
        }
        this.size++;
        if (this.sequence % 100 === 0) {
          logger("ObjectRegistry Holds reference to " + this.size + " objects");
        }
      }
      return null;
    };

    ObjectRegistry.prototype.getSequence = function() {
      var id;
      id = this.sequence.toString(35);
      this.sequence++;
      return id;
    };

    ObjectRegistry.prototype.getObject = function(id) {
      var func, val;
      func = this.functions[id];
      if (func != null) {
        return func;
      }
      val = this.objects[id];
      if ((val == null) || weak.isDead(val)) {
        delete this.objects[id];
        this.size--;
        return null;
      }
      return val;
    };

    return ObjectRegistry;

  })();

  module.exports = ObjectRegistry;

}).call(this);
